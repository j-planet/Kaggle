Todos:

- build auc into GBC

- calibrate classifier parameters (after getting the  test score into the ball park), including imputer

- cv with VW

- MLWave features:

    has_bought_company: the number of times a shopper has bought from the company on offer
    has_bought_company_a: the total amount the shopper has bought from the company on offer
    has_bought_company_q: the quantity of items bought from the company on offer.
    has_bought_company_30: the number of times a shopper has bought from the company on offer in the 30 days before the date the coupon was offered.
    has_bought_company_60: the number of times a shopper has bought from the company on offer in the 60 days before the date the coupon was offered.
    ...
    has_bought_company_180: 180 days before
    has_never_bought_company: a negative feature for when the shopper has never bought from the company on offer before.
    These same features for:
        has_bought_category: the number of times a shopper has bought from the category on offer
        has_bought_brand: the number of times a shopper has bought from the brand on offer
    Combinations of these:
        has_bought_company_brand_category: if this feature is present the shopper has bought from the company, brand, and category on offer.
        has_never_bought_company_brand: negative feature for the combination of brand and company purchase history.


finished todos: :)

- compress transaction history (all in memory)
- compress transaction using index file (not in memory) :)
- output compressed transactions in chunk
- compress in parallel
- assess feature importance
- train and predict using compressed transactions' data :)
- very basic imputation
- logistic regression...? (didn't really workout)
- CV function
- quantile regression...?
- use the information of number of repeats somehow...
- amend offers
- amend offers without blowing up memory
- some offers are in the test set but never appeared in the training set:
    set([1221665,
         1190530,
         1221667,
         1230218,
         1221666,
         1203439,
         1220502,
         1220503,
         1221658,
         1219903,
         1219900,
         1213242,
         1221663])
     => could amending offers be the answer? i.e. replace company by the reputation of the company
- vw
- better CV: each fold contains a different offer/company/category
- Offer features based on # repeats
- Offer discount value
-------------------------------------

BUGS: :'( :'(


fixed BUGS: :D :D
- loop gets slower every time :'( => non-binary files don't support "random access". therefore, the later in the file,
    the longer file access takes